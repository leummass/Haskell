-- En este archivo se abordará el problema a resolver y cómo se dará solución

Adivinanza de números.
En este proyecto, realizaras un juego, donde el objetivo es que el usuario adivine un número aleatorio generado por la computadora en un número limitado de intentos. El juego deberá mostrar al usuario si cada intento es más alto o bajo, y al final del juego, deberá mostrar el número de intentos y la cantidad de intentos utilizados. Utilizar un sistema de puntuaciones que serán almacenadas en un archivo el cual será actualizado y leído.

A continuación, se muestra un esquema básico de cómo será el juego:

1.Crear un pequeño menú para ver puntuaciones y jugar un nuevo juego.
2.Si genera un nuevo juego preguntar al usuario su nombre.
3.Generar un número aleatorio entre n y m utilizando la biblioteca “System.Random” de haskell. Los números n y m son ingresados por el usuario.
4.Utilizar alguna formula para calcular el número de intentos máximo (Puedes utilizar un porcentaje de la diferencia de n y m).
5.Pedir al usuario que ingrese su primer intento.
6.Verificar si el número ingresado es igual al número generado. Si es así, mostrar un mensaje de felicitaciones y terminar el juego. Si no, continuar con el siguiente paso.
7.Comparar el número ingresado con el número generado y mostrar un mensaje indicando si el número es más alto o bajo.
8.Pedir al usuario que ingrese su siguiente intento y repetir los pasos 3-4 hasta que el número correcto sea adivinado o hasta que se haya alcanzado un número máximo de intentos.
9.Si el usuario no ha adivinado el número correcto después de un número máximo de intentos, mostrar un mensaje indicando que el juego ha terminado y mostrar el número correcto.
10.Guardar la puntuación obtenida (Realizar un cálculo con respecto al número de intentos, el máximo y la diferencia del rango).

Propuesta de lo necesario a implementar en Haskell para resolver el problema:
1. Generación de un número aleatorio
    1.1 La generación del número aleatorio tiene que ser entre dos números, n y m, utilizando la biblioteca System.Random de Haskell, los números n y m los proporcionará el jugador

2. Función que muestre si el número que se recibió en el intento es más alto o más bajo que el aleatorio generado en ese intento 

3. Al final, mostrar el número de intentos utilizado 

4. Almacenar puntuaciónes en un archivo que puede ser actualizado y leído

5. Menú con las siguientes opciones: Jugar, Ver puntuaciones y Salir
    5.1 Al jugar de nuevo se tiene que preguntar el nombre del jugador

6. El jugador tiene N número de intentos para adivinar el número, para calcular el número de intentos se utlizará una formula que es la siguiente:
    Si m-n<=5
        intentos = 3
    Si m-n<=30
        intentos = 5
    De lo contrario
        intentos = 10

7. Pedir el primer intento al jugador

8. Función que verifique si el número ingresado en el intento actual es igual al generado, si es igual, mostrar un mensaje de felicitaciones y terminar el juego, de lo contrario, continuar

(En caso de continuación del punto 8)
9. Repetir la pregunta de un número hasta que sea adivinado o se llegue al número máximo de intentos
    9.1 Si se llega al máximo de intentos se debe de mostrar un mensaje que indique que el juego terminó y se muestra el número que se debía de encontrar y se retorna al menú del punto 5
    9.2 Se adivine o no se adivine el número se tiene que mostrar la puntuación obtenida y se seguirá el siguiente criterio:
        -- La puntuación máxima es 100
        Para m-n>30
            Máximo de intentos sin adivinar:
                Si el número estuvo a 1 de diferencia: 30 puntos 
                Si el número estuvo a 5 o menos de diferencia: 15 puntos 
                Si el número estuvo a 10 o menos de diferencia: 
                10 puntos
                Si el número estuvo a una diferencia mayor a 10:
                0
            Si se adivina:
                100 puntos y se reducen en 2 por intento 
        Para m-n<=30
            Máximo de intentos sin adivinar:
                Si el número estuvo a 1 de diferencia: 20 puntos 
                Si el número estuvo a 5 o menos de diferencia: 10 puntos 
                Si el número estuvo a una diferencia mayor a 5:
                0
            Si se adivina:
                100 puntos y se reducen en 5 por intento 
        Para m-n<=5
            Máximo de intentos sin adivinar:
                Si el número estuvo a 1 de diferencia: 20 puntos 
                Si el número estuvo a 5 o menos de diferencia: 10 puntos 
                Si el número estuvo a una diferencia mayor a 5:
                0
            Si se adivina:
                100 puntos y se reducen en 7 por intento 


